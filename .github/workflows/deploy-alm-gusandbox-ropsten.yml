name: Deploy ALM GUSandbox-Ropsten
on:
  push:
    branches: ['main', 'dev-duy-test-ci']

env:
  PROJECT_ID: gu-bridge
  SERVICE_ID: alm-gusandbox-ropsten

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install
        run: yarn initialize --frozen-lockfile

      - name: Build
        run: yarn build:alm --if-present
        env:
          COMMON_HOME_BRIDGE_ADDRESS: '0x55af7F974F6B294034000Bb46c6359C5c605B62A'
          COMMON_FOREIGN_BRIDGE_ADDRESS: '0xF1b5cc67c911F67cCC4021C22241AC7c21CB43C8'

          COMMON_HOME_RPC_URL: 'https://b32b3f3b-c059-47f5-b171-1a3c952f61b7.4z9mdn90pg6rby7s7iqv9kjgg.ep.bccloud.net:8545/''
          COMMON_FOREIGN_RPC_URL: 'https://ropsten.infura.io/v3/972b939390fe4a298f2afa9907fdb06a'

          ALM_HOME_NETWORK_NAME: 'GU Sandbox'
          ALM_FOREIGN_NETWORK_NAME: 'Ropsten'

          ALM_HOME_EXPLORER_TX_TEMPLATE: 'https://b32b3f3b-c059-47f5-b171-1a3c952f61b7.4z9mdn90pg6rby7s7iqv9kjgg.ep.bccloud.net/tx/%s'
          ALM_FOREIGN_EXPLORER_TX_TEMPLATE: 'https://ropsten.etherscan.io/tx/%s'

          ALM_HOME_EXPLORER_API: 'https://b32b3f3b-c059-47f5-b171-1a3c952f61b7.4z9mdn90pg6rby7s7iqv9kjgg.ep.bccloud.net/api'
          ALM_FOREIGN_EXPLORER_API: 'https://api-ropsten.etherscan.io/?apikey=GMTSS17Q7R3H5W4CVUHUYD8MX48PIAPKTW'

      # - name: Test
      #   run: yarn dapp:test

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCLOUD_SERVICE_KEY }}

      - name: Deploy to App Engine
        run: gcloud app deploy --appyaml=alm-app.yaml

      - name: Delete old versions
        run: gcloud app versions list --filter="service=${{env.SERVICE_ID}}" --format="value(version.id)" --sort-by="~version.createTime" | tail -n +11 | xargs -r gcloud app versions delete # Only keep 10 latest versions
