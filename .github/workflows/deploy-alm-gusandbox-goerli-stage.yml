name: Deploy ALM GUSandbox-Goerli to Stage environment
on: workflow_dispatch

jobs:
  build:
    if: github.actor == 'kazkondo' || github.actor == 'KumikoTamura'
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install
        run: yarn initialize --frozen-lockfile

      - name: Build
        run: yarn build:alm --if-present
        env:
          REACT_APP_COMMON_HOME_BRIDGE_ADDRESS: '0xCc1C5f822dCFBF0DD98a442FeDB7b44062f5cb71'
  # generate from tokenbridge-contract
          REACT_APP_COMMON_FOREIGN_BRIDGE_ADDRESS: '0xd1cda03Dc71DbccD32801770eEa4d6e4fe833691'
  # generate from tokenbridge-contract
          REACT_APP_COMMON_HOME_RPC_URL: 'https://sandbox1.japanopenchain.org:8545/'
          REACT_APP_COMMON_FOREIGN_RPC_URL: 'https://eth-goerli.g.alchemy.com/v2/3dILjPem0lnHDrK2HCxbM5YwIN7w7KY5/'
          REACT_APP_ALM_HOME_NETWORK_NAME: 'G.U.Sandbox'
          REACT_APP_ALM_FOREIGN_NETWORK_NAME: 'Goerli'
          REACT_APP_ALM_HOME_EXPLORER_TX_TEMPLATE: 'https://sandbox1.japanopenchain.org/tx/%s'
          REACT_APP_ALM_FOREIGN_EXPLORER_TX_TEMPLATE: 'https://goerli.etherscan.io/tx/%s'
          REACT_APP_ALM_HOME_EXPLORER_API: 'https://sandbox1.japanopenchain.org/api'
          REACT_APP_ALM_FOREIGN_EXPLORER_API: 'https://api-goerli.etherscan.io/?apikey=9XR3C9DYZQUZSU1QZ7QP3KC6NTH1579EBQ'

      - name: Generate deployment package
        run: zip -r deploy.zip . -x '*.git*' -x '.env' -x '*node_modules*' -x '*.yaml'

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Deploy to Stage EB
        uses: einaregilsson/beanstalk-deploy@v11
        with:
          aws_access_key: ${{ secrets.AWS_STG_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_STG_SECRET_ACCESS_KEY }}
          application_name: bridge-alm
          environment_name: alm-stg-node16
          version_label: ${{ steps.get_version.outputs.VERSION }}
          region: ap-northeast-1
          deployment_package: deploy.zip
