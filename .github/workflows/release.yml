name: Create release
run-name: Create release ${{ github.ref_name }} by @${{ github.actor }}
on: workflow_dispatch

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.actor }}
  cancel-in-progress: true

env:
  AWS_REGION: ap-northeast-1

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release - ${{ github.ref_name }}
          draft: false
          prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

  upload-dapp-stage-assets:
    runs-on: ubuntu-latest
    needs: create-release
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn initialize
      - run: yarn build:alm
        env:
          REACT_APP_COMMON_HOME_BRIDGE_ADDRESS: "0xCc1C5f822dCFBF0DD98a442FeDB7b44062f5cb71"
          REACT_APP_COMMON_FOREIGN_BRIDGE_ADDRESS: "0xd1cda03Dc71DbccD32801770eEa4d6e4fe833691"
          REACT_APP_COMMON_HOME_RPC_URL: "https://sandbox1.japanopenchain.org:8545/"
          REACT_APP_COMMON_FOREIGN_RPC_URL: "https://eth-goerli.g.alchemy.com/v2/3dILjPem0lnHDrK2HCxbM5YwIN7w7KY5/"
          REACT_APP_ALM_HOME_NETWORK_NAME: "G.U.Sandbox"
          REACT_APP_ALM_FOREIGN_NETWORK_NAME: "Goerli"
          REACT_APP_ALM_HOME_EXPLORER_TX_TEMPLATE: "https://sandbox1.japanopenchain.org/tx/%s"
          REACT_APP_ALM_FOREIGN_EXPLORER_TX_TEMPLATE: "https://goerli.etherscan.io/tx/%s"
          REACT_APP_ALM_HOME_EXPLORER_API: "https://sandbox1.japanopenchain.org/api"
          REACT_APP_ALM_FOREIGN_EXPLORER_API: "https://api-goerli.etherscan.io/?apikey=9XR3C9DYZQUZSU1QZ7QP3KC6NTH1579EBQ"

      - name: Generate deployment package
        run: cd alm && mv package-copy.json package.json && zip -r deploy.zip build package.json package-lock.json

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./alm/deploy.zip
          asset_name: alm-ui-stage-${{ github.ref_name }}.zip
          asset_content_type: application/zip
  upload-dapp-production-assets:
    runs-on: ubuntu-latest
    needs: create-release
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn initialize
      - run: yarn build:alm
        env:
          REACT_APP_COMMON_HOME_BRIDGE_ADDRESS: "0x2deC96c28A6e991BAc485D2e191abB91da6F8148"
          REACT_APP_COMMON_FOREIGN_BRIDGE_ADDRESS: "0x2deC96c28A6e991BAc485D2e191abB91da6F8148"
          REACT_APP_COMMON_HOME_RPC_URL: "https://mainnet.japanopenchain.org:8545/"
          REACT_APP_COMMON_FOREIGN_RPC_URL: "https://eth-mainnet.g.alchemy.com/v2/5G7UdpHTbR9ZtKWFVFs0SdEF8gbvdln1/"
          REACT_APP_ALM_HOME_NETWORK_NAME: "Japan Open Chain"
          REACT_APP_ALM_FOREIGN_NETWORK_NAME: "Ethereum"
          REACT_APP_ALM_HOME_EXPLORER_TX_TEMPLATE: "https://mainnet.japanopenchain.org/tx/%s"
          REACT_APP_ALM_FOREIGN_EXPLORER_TX_TEMPLATE: "https://etherscan.io/tx/%s"
          REACT_APP_ALM_HOME_EXPLORER_API: "https://mainnet.japanopenchain.org/api"
          REACT_APP_ALM_FOREIGN_EXPLORER_API: "https://api.etherscan.io/?apikey=9XR3C9DYZQUZSU1QZ7QP3KC6NTH1579EBQ"

      - name: Generate deployment package
        run: cd alm && mv package-copy.json package.json && zip -r deploy.zip build package.json package-lock.json

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./alm/deploy.zip
          asset_name: alm-ui-stage-${{ github.ref_name }}.zip
          asset_content_type: application/zip
    